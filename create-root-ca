#!/bin/bash
# Derek Moore <derek.moore@gmail.com>

set -eu

umask 0077

BIN_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
source "${BIN_DIR}"/functions
source "${BIN_DIR}"/defaults.conf

usage() {
    echo "Usage: $0 -d CA_DIR"
    echo "Initializes a new root CA in CA_DIR"
    echo
    echo "Options:"
    echo "    -d CA_DIR  Target directory to be created and initialized"
    echo
    exit 2
}

CA_DIR=

while getopts "d:" FLAG; do
    case $FLAG in
        d) CA_DIR=${OPTARG} ;;
        *) echo -e -n "$ERR " && usage ;;
    esac
done

if [ $OPTIND -le $# ]; then
    echo -e -n "$ERR " && usage
elif [[ "${CA_DIR}" = "" ]]; then
    echo -e -n "$SUCC " && usage
fi

CA_NAME=$( basename "${CA_DIR}" )

echo -e "$NOTE Creating root CA in dir '${CA_DIR}'"

init_ca_home "${CA_DIR}"
generate_conf "${CA_DIR}"/bin/defaults.conf
source "${CA_DIR}"/bin/defaults.conf

CA_CERT_CN="${CA_CERT_O} Certificate Authority"
echo -e -n "$INPUT Common Name for CA certificate [${CA_CERT_CN}]: "
read -r CERT_CN
if [ -n "${CERT_CN}" ]; then
    CA_CERT_CN=${CERT_CN}
fi

echo
echo -e -n "$INPUT Enter passphase for encrypting root CA key: "
read -r -s PASS1
echo
echo -e -n "$INPUT Verifying - Enter passphase for encrypting root CA key: "
read -r -s PASS2
echo

if [[ "${PASS1}" != "${PASS2}" ]]; then
    echo "$ERR Passphrases did not match, exiting."
    exit 1
fi
export CA_PASS="${PASS1}"

CA_PATH=$( fullpath "${CA_DIR}")

pushd "${CA_DIR}" > /dev/null

# Generate the root CA openssl config
template "${BIN_DIR}/templates/root.tpl" "conf/ca.conf"

echo -e "$NOTE Creating the root CA key (${CA_KEY_ALG} with ${CA_KEY_LENGTH_ROOTCA} bits)"

openssl genrsa -out ca/private/ca.key -"${CA_KEY_ALG}" -passout env:CA_PASS "${CA_KEY_LENGTH_ROOTCA}"
chmod 0400 ca/private/ca.key

echo -e "$NOTE Creating the root CA csr"

openssl req -new -batch \
            -config conf/ca.conf \
            -out ca/ca.csr \
            -passin env:CA_PASS

echo -e "$NOTE Creating the root CA certificate"

openssl ca -selfsign -batch -notext \
           -config conf/ca.conf \
           -in ca/ca.csr \
           -extensions root_ca_ext \
           -passin env:CA_PASS

echo -e "$NOTE Creating the root CA CRL"

openssl ca -gencrl -batch \
           -config conf/ca.conf \
           -passin env:CA_PASS

echo -e "$NOTE Creating the chain bundle"

ln -s ca/ca.crt ca/chain.pem

echo -e "$NOTE Copying toolchain (symlinking)"

for BIN in ${BINARIES_ROOT}; do
    ln -s "${BIN_DIR}"/"${BIN}" bin/
done
mkdir bin/templates/
for TPL in ${TEMPLATES_ROOT}; do
    ln -s "${BIN_DIR}"/templates/"${TPL}" bin/templates/
done

popd > /dev/null

unset CA_PASS

echo -e "$SUCC Root CA initialized."
